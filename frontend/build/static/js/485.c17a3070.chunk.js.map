{"version":3,"file":"static/js/485.c17a3070.chunk.js","mappings":"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","sources":["components/menu/Menu.js","components/modal/Accessmodal.js","components/layout/Layout.js","components/layout/LayoutStyles.js","pages/MainPage.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FiMenu } from \"react-icons/fi\";\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: flex-start;\n  margin-bottom: 20px;\n  -ms-overflow-style: none; /* IE 및 Edge용 */\n  scrollbar-width: none; /* Firefox 용 */\n  overflow-x: auto; /* 가로 스크롤이 가능하도록 설정 */\n\n  /* 스크롤바 숨김 */\n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari 및 Opera 용 */\n  }\n`;\n\nconst Button = styled.button`\n  margin-right: 10px;\n  padding: 10px 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  background-color: #fff;\n  color: #000;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n  width: 120px;\n  text-align: center;\n\n  &:hover {\n    background-color: #f0f0f0;\n  }\n`;\n\nconst Menu = () => {\n  return (\n    <Nav>\n      <Link to=\"/\">\n        <Button>BEST</Button>\n      </Link>\n      <Link to=\"/category/1\">\n        <Button>커피</Button>\n      </Link>\n      <Link to=\"/category/2\">\n        <Button>라떼</Button>\n      </Link>\n      <Link to=\"/category/3\">\n        <Button>티</Button>\n      </Link>\n      <Link to=\"/category/4\">\n        <Button>주스</Button>\n      </Link>\n      <Link to=\"/category/5\">\n        <Button>에이드</Button>\n      </Link>\n    </Nav>\n  );\n};\n\nexport default Menu;\n","// AccessModal.js\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n`;\n\nconst ModalContent = styled.div`\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  width: 80%;\n  max-width: 300px;\n  text-align: center;\n`;\n\nconst CloseButton = styled.button`\n  background-color: transparent;\n  color: #000;\n  border: 1px solid #000;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nconst AccessModal = ({ show, handleClose, message }) => {\n  const [timeLeft, setTimeLeft] = useState(5);\n  let timer;\n\n  useEffect(() => {\n    if (show) {\n      setTimeLeft(5);\n      timer = setInterval(() => {\n        setTimeLeft((prevTime) => (prevTime === 0 ? 0 : prevTime - 1));\n      }, 1000);\n    }\n\n    return () => clearInterval(timer);\n  }, [show]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleClose();\n    }\n  }, [timeLeft, handleClose]);\n\n  // 모달이 열리지 않으면 보이지 않음\n  if (!show) return null;\n\n  return (\n    <ModalBackdrop>\n      <ModalContent>\n        <p>{message}</p>\n        <p>{timeLeft} 후에 없어져요!</p>\n        <CloseButton onClick={handleClose}>닫기</CloseButton>\n      </ModalContent>\n    </ModalBackdrop>\n  );\n};\n\nexport default AccessModal;\n","// Layout.js\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Menu from \"../menu/Menu\";\n\nimport * as styled from \"./LayoutStyles\";\n\nimport Accessmodal from \"../modal/Accessmodal\";\n\nconst Layout = ({ children }) => {\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n\n  // 장바구니 정보 확인(모달창)\n  const checkCart = () => {\n    const cartItems = JSON.parse(localStorage.getItem(\"cart\"));\n    if (!cartItems || cartItems.length === 0) {\n      setShowModal(true); // 모달 표시\n    } else {\n      navigate(\"/cart\"); // 장바구니 페이지로 이동\n    }\n  };\n  return (\n    <styled.Container>\n      <styled.Header>\n        <styled.Logo>\n          <styled.CafeName>KIOSK</styled.CafeName>\n          <styled.Slogan>핸드폰에서 주문하기!</styled.Slogan>\n        </styled.Logo>\n        <styled.CartLink onClick={checkCart}>\n          <styled.CartIcon />\n        </styled.CartLink>\n      </styled.Header>\n      <Menu />\n      <main>{children}</main>\n      <styled.Footer>\n        <styled.CafeInfo>\n          <p>사색볼펜 : 주형록 | 정재호 | 우상욱 | 장찬현</p>\n          <p>카페키오스크: Non-Display</p>\n        </styled.CafeInfo>\n        <styled.SocialLinks>\n          <a href=\"https://github.com/juhyungrok/full_stack\">깃허브 정보</a>\n          {/* SNS 아이콘은 원하는 SNS 아이콘 라이브러리를 사용하여 추가 */}\n        </styled.SocialLinks>\n        <styled.Terms>\n          <Link to=\"https://glory-phone-a3d.notion.site/bbb0816dd4314b60832ce953b9334bbb?pvs=4\">\n            이용약관\n          </Link>\n        </styled.Terms>\n      </styled.Footer>\n      <Accessmodal\n        show={showModal}\n        handleClose={() => setShowModal(false)}\n        message=\"장바구니에 정보가 없음\"\n      />\n    </styled.Container>\n  );\n};\n\nexport default Layout;\n","// styles.js\n\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  overflow-x: auto; /* 가로 스크롤 항상 표시 */\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 20px; /* 헤더에 패딩 추가 */\n`;\n\nexport const Logo = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const CafeName = styled.h1`\n  margin: 0;\n  font-size: 30px;\n`;\n\nexport const Slogan = styled.span`\n  margin-left: 50px;\n  font-size: 13px;\n`;\n\nexport const CartLink = styled(Link)`\n  color: inherit;\n  text-decoration: none;\n`;\n\nexport const CartIcon = styled(FiShoppingCart)`\n  font-size: 40px;\n  text-bold: 3px;\n`;\n\nexport const Footer = styled.footer`\n  margin-top: 40px;\n  padding-top: 20px;\n  border-top: 1px solid #ccc;\n`;\n\nexport const CafeInfo = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const SocialLinks = styled.div`\n  a {\n    margin-right: 10px;\n    color: #333;\n  }\n`;\n\nexport const Terms = styled.div`\n  a {\n    color: #333;\n  }\n`;\n\nexport const MenuContainer = styled.nav`\n  margin-bottom: 20px;\n\n  div {\n    display: flex;\n  }\n\n  button {\n    margin-right: 10px;\n    padding: 10px 20px;\n    border: none;\n    background-color: #ccc;\n    color: #333;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: #999;\n  }\n`;\n\nexport const CategoryContainer = styled.div`\n  margin-bottom: 20px;\n\n  h1 {\n    margin-bottom: 10px;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    display: grid;\n    grid-template-columns: repeat(\n      auto-fill,\n      minmax(250px, 1fr)\n    ); // 기본적으로 한 줄에 2개의 카드를 표시\n    gap: 20px; // 아이템 사이의 간격\n  }\n\n  @media screen and (max-width: 768px) {\n    ul {\n      grid-template-columns: repeat(\n        2,\n        1fr\n      ); // 화면 크기가 작아질 때는 한 줄에 2개의 카드를 표시\n    }\n  }\n`;\n\nexport const ProductCard = styled.li`\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden; // 내용이 카드를 넘어갈 경우 처리\n\n  img {\n    width: 100%;\n    display: block;\n    border-radius: 10px 10px 0 0; // 상단 부분만 둥글게 처리\n  }\n\n  .product-info {\n    padding: 20px;\n  }\n\n  h3 {\n    margin-top: 0;\n    margin-bottom: 10px;\n    font-size: 18px;\n  }\n\n  p {\n    margin: 0;\n    font-size: 16px;\n  }\n`;\nexport const ProductImage = styled.img`\n  width: 200px;\n  height: auto;\n`;\n","// MainPage 컴포넌트 수정\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Layout from \"../components/layout/Layout\";\nimport { getProducts } from \"../api\";\nimport * as styled from \"../components/layout/LayoutStyles\";\n\nconst MainPage = () => {\n  const [bestProducts, setBestProducts] = useState([]);\n\n  useEffect(() => {\n    const fetchBestProducts = async () => {\n      try {\n        const products = await getProducts();\n        const bestProducts = products.reduce((acc, category) => {\n          return [\n            ...acc,\n            ...category.products.filter((product) => product.isBest),\n          ];\n        }, []);\n        setBestProducts(bestProducts);\n      } catch (error) {\n        console.log(\"error best products:\", error);\n      }\n    };\n    fetchBestProducts();\n  }, []);\n\n  return (\n    <Layout>\n      <styled.CategoryContainer>\n        <h1>Best Products</h1>\n        <ul>\n          {bestProducts.map((product) => (\n            <styled.ProductCard key={product.productId}>\n              <Link to={`/details/${product.productId}`}>\n                <styled.ProductImage src={product.imgUrl} alt={product.name} />\n              </Link>\n              <div className=\"product-info\">\n                <h3>{product.name}</h3>\n                <p>가격 : {product.price}원</p>\n              </div>\n            </styled.ProductCard>\n          ))}\n        </ul>\n      </styled.CategoryContainer>\n    </Layout>\n  );\n};\n\nexport default MainPage;\n"],"names":["Nav","styled","nav","_templateObject","_taggedTemplateLiteral","Button","button","_templateObject2","Menu","_jsxs","children","_jsx","Link","to","ModalBackdrop","div","ModalContent","CloseButton","_templateObject3","_ref","show","handleClose","message","timeLeft","setTimeLeft","useState","timer","useEffect","setInterval","prevTime","clearInterval","onClick","navigate","useNavigate","showModal","setShowModal","checkCart","cartItems","JSON","parse","localStorage","getItem","length","href","Accessmodal","Container","Header","header","Logo","CafeName","h1","_templateObject4","Slogan","span","_templateObject5","CartLink","_templateObject6","CartIcon","FiShoppingCart","_templateObject7","Footer","footer","_templateObject8","CafeInfo","_templateObject9","SocialLinks","_templateObject10","Terms","_templateObject11","CategoryContainer","_templateObject12","_templateObject13","ProductCard","li","_templateObject14","ProductImage","img","_templateObject15","MainPage","bestProducts","setBestProducts","async","getProducts","reduce","acc","category","products","filter","product","isBest","error","console","log","fetchBestProducts","Layout","map","concat","productId","src","imgUrl","alt","name","className","price"],"sourceRoot":""}
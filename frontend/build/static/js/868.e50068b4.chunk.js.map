{"version":3,"file":"static/js/868.e50068b4.chunk.js","mappings":"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","sources":["components/menu/DetailHeader.js","components/button/QuantityButton.js","components/button/TemperatureButton.js","components/button/SizeButton.js","components/modal/cartToaddmodal.js","components/menu/OrderInfoModule.js","components/button/AddtoCartButton.js","pages/ProductDetailsPage.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MenuHeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100vw;\n  height: 60px;\n  background-color: #f0f0f0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nconst BackButton = styled.button`\n  font-size: 16px;\n  font-weight: bold; /* 텍스트를 두껍게 만듭니다. */\n  background-color: transparent;\n  border: none;\n`;\n\nconst MenuDetails = styled.div`\n  margin-left: 20%;\n  flex-grow: 1; /* MenuDetails 영역이 더 큰 공간을 차지하도록 설정합니다. */\n`;\n\nconst Menu = styled.p`\n  font-weight: bold; /* 메뉴 이름을 두껍게 만듭니다. */\n  margin: 0;\n`;\n\nconst DetailHeader = ({ menuName }) => {\n  const goBack = () => {\n    window.history.back(); // 브라우저의 뒤로가기 기능 사용\n  };\n  return (\n    <MenuHeaderContainer>\n      <BackButton onClick={goBack}>{\"<\"} 뒤로가기</BackButton>\n      <MenuDetails>\n        <Menu>{menuName}</Menu>\n      </MenuDetails>\n    </MenuHeaderContainer>\n  );\n};\nexport default DetailHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 5px;\n  background-color: ${(props) => (props.selected ? \"#000000\" : \"#f0f0f0\")};\n  color: ${(props) => (props.selected ? \"#ffffff\" : \"#000000\")};\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nconst QuantityButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst QuantityButton1 = styled(Button)`\n  font-size: 14px;\n  padding: 8px 12px;\n`;\n\nconst QuantityButton = ({ amount, incrementAmount, decrementAmount }) => {\n  return (\n    <QuantityButtonContainer>\n      <Button onClick={decrementAmount}>-</Button>\n      <QuantityButton1>{amount}</QuantityButton1>\n      <Button onClick={incrementAmount}>+</Button>\n    </QuantityButtonContainer>\n  );\n};\n\nexport default QuantityButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 5px;\n  background-color: ${(props) =>\n    props.selected ? \"#d2b48c\" : props.disabled ? \"#f0f0f0\" : \"#ffffff\"};\n  color: ${(props) => (props.selected ? \"#ffffff\" : \"#000000\")};\n  border: 2px solid #d2b48c; /* Add border */\n  border-radius: 5px;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  display: ${(props) =>\n    props.disabled ? \"none\" : \"block\"}; /* hide button if disabled */\n  &:hover {\n    background-color: ${(props) =>\n      props.disabled ? \"#f0f0f0\" : \"#d2b48c\"}; /* light brown color on hover */\n  }\n`;\n\nconst TemperatureButton = ({\n  temperature,\n  selectedTemperature,\n  handleTemperatureClick,\n  disabled,\n}) => {\n  return (\n    <Button\n      onClick={() => handleTemperatureClick(temperature)}\n      selected={selectedTemperature === temperature}\n      disabled={disabled}\n    >\n      {temperature}\n    </Button>\n  );\n};\n\nexport default TemperatureButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  margin: 5px;\n  background-color: ${(props) =>\n    props.selected ? \"#d2b48c\" : props.disabled ? \"#f0f0f0\" : \"#ffffff\"};\n  color: ${(props) => (props.selected ? \"#ffffff\" : \"#000000\")};\n  border: 2px solid #d2b48c; /* Add border */\n  border-radius: 5px;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  display: ${(props) =>\n    props.disabled ? \"none\" : \"block\"}; /* hide button if disabled */\n  &:hover {\n    background-color: ${(props) =>\n      props.disabled ? \"#f0f0f0\" : \"#d2b48c\"}; /* light brown color on hover */\n  }\n`;\n\nconst SizeButton = ({ size, selectedSize, handleSizeClick, disabled }) => {\n  return (\n    <Button\n      onClick={() => handleSizeClick(size)}\n      selected={selectedSize === size}\n      disabled={disabled}\n    >\n      {size}\n    </Button>\n  );\n};\n\nexport default SizeButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst ModalBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContent = styled.div`\n  background-color: #ffffff;\n  padding: 40px;\n  border-radius: 8px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  position: relative;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst ButtonWrapper = styled.div`\n  width: 45%;\n`;\n\nconst CloseButton = styled.button`\n  padding: 8px 31px;\n  background-color: #ffffff;\n  color: #333333;\n  border: 2px solid #333333;\n  border-radius: 5px;\n  font-weight: bold;\n  text-decoration: none;\n`;\n\nconst CartButton = styled(Link)`\n  padding: 8px 13px;\n  background-color: #ffffff;\n  color: #333333;\n  border: 2px solid #333333;\n  border-radius: 5px;\n  font-weight: bold;\n  text-decoration: none;\n  margin-left: 10px; /* 간격 조정 */\n`;\n\nconst ModalText = styled.p`\n  font-size: 16px;\n  color: #333333;\n  margin-bottom: 20px;\n  font-weight: bold; /* 텍스트 굵게 */\n`;\n\nconst CartToAddModal = ({ show, handleClose, cartAdded }) => {\n  return (\n    <>\n      {show && (\n        <ModalBackdrop>\n          <ModalContent>\n            {cartAdded !== undefined && (\n              <>\n                <ModalText>\n                  {cartAdded\n                    ? \"장바구니에 상품이 추가되었습니다.\"\n                    : \"옵션을 선택하세요\"}\n                </ModalText>\n                <ButtonContainer>\n                  {cartAdded && (\n                    <ButtonWrapper>\n                      <CartButton to=\"/cart\">장바구니</CartButton>\n                    </ButtonWrapper>\n                  )}\n                  <ButtonWrapper>\n                    {cartAdded ? (\n                      <CloseButton as={Link} to=\"/\">\n                        닫기\n                      </CloseButton>\n                    ) : (\n                      <CloseButton onClick={handleClose}>닫기</CloseButton>\n                    )}\n                  </ButtonWrapper>\n                </ButtonContainer>\n              </>\n            )}\n          </ModalContent>\n        </ModalBackdrop>\n      )}\n    </>\n  );\n};\n\nexport default CartToAddModal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CartToAddModal from \"../modal/cartToaddmodal\";\n\nconst OrderInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  background-color: #f0f0f0;\n  border-radius: 8px;\n  margin-top: 16px;\n`;\n\nconst TotalPriceText = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nconst OrderButton = styled.button`\n  padding: 10px 20px;\n  background-color: #ffffff;\n  color: #000000;\n  border: 2px solid #000000;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nconst OrderInfoModule = ({ product, total }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleOrder = () => {\n    if (!product.selectedTemperature || !product.selectedSize) {\n      setShowModal(true);\n    } else {\n      const newCart = [product];\n      localStorage.setItem(\"cart\", JSON.stringify(newCart));\n      window.location.href = \"/cart\";\n    }\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <OrderInfoContainer>\n        <TotalPriceText>상품 금액: {total}원</TotalPriceText>\n        <OrderButton onClick={handleOrder}>주문하기</OrderButton>\n      </OrderInfoContainer>\n      <CartToAddModal\n        show={showModal}\n        handleClose={handleCloseModal}\n        cartAdded={false}\n      />\n    </>\n  );\n};\n\nexport default OrderInfoModule;\n","// AddToCartButton.js\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CartToAddModal from \"../modal/cartToaddmodal\";\n\nconst Button = styled.button`\n  font-size: 16px;\n  padding: 10px 20px;\n  background-color: #ffffff; /* 흰색 배경색 */\n  color: #000000; /* 글자색을 검은색으로 변경 */\n  border: 2px solid #000000; /* 테두리 추가 */\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\nconst AddToCartButton = ({ product }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [cartAdded, setCartAdded] = useState(false);\n\n  const addToCart = () => {\n    if (product.selectedTemperature && product.selectedSize) {\n      const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n      const existingItemIndex = cart.findIndex(\n        (item) =>\n          item.productId === product.productId &&\n          item.selectedTemperature === product.selectedTemperature &&\n          item.selectedSize === product.selectedSize\n      );\n\n      if (existingItemIndex !== -1) {\n        cart[existingItemIndex].amount = product.amount;\n      } else {\n        cart.push(product);\n      }\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n\n      setShowModal(true);\n      setCartAdded(true);\n    } else {\n      setShowModal(true); // 옵션이 선택되지 않았을 때도 모달 창 표시\n      setCartAdded(false); // 카트에 상품이 추가되지 않았음을 설정\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Button onClick={addToCart}>장바구니 추가</Button>\n      <CartToAddModal\n        show={showModal}\n        handleClose={closeModal}\n        cartAdded={cartAdded}\n      />\n    </>\n  );\n};\n\nexport default AddToCartButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getProducts } from \"../api\";\nimport DetailHeader from \"../components/menu/DetailHeader\";\nimport QuantityButton from \"../components/button/QuantityButton\";\n\nimport styled from \"styled-components\";\nimport TemperatureButton from \"../components/button/TemperatureButton\";\nimport SizeButton from \"../components/button/SizeButton\";\nimport OrderInfoModule from \"../components/menu/OrderInfoModule\";\nimport AddToCartButton from \"../components/button/AddtoCartButton\";\n\nconst ProductContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n  background-color: #ffffff;\n`;\n\nconst SectionContainer = styled.div`\n  margin-top: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst OptionContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 16px;\n`;\n\nconst OptionTitle = styled.p`\n  font-size: 150%;\n  font-weight: bold;\n  color: #4d4d4d;\n  margin-bottom: 10%;\n`;\n\nconst ProductDetailsPage = () => {\n  const { productId } = useParams();\n\n  const [product, setProduct] = useState(null);\n  const [amount, setAmount] = useState(1);\n  const [selectedTemperature, setSelectedTemperature] = useState(null);\n  const [selectedSize, setSelectedSize] = useState(null);\n\n  const incrementAmount = () => {\n    setAmount(amount + 1);\n  };\n\n  const decrementAmount = () => {\n    if (amount > 1) {\n      setAmount(amount - 1);\n    }\n  };\n\n  const handleTemperatureClick = (temperature) => {\n    setSelectedTemperature(temperature);\n  };\n\n  const handleSizeClick = (size) => {\n    setSelectedSize(size);\n  };\n\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const categories = await getProducts();\n        const foundProduct = categories\n          .flatMap((cat) => cat.products)\n          .find((prod) => prod.productId === parseInt(productId));\n        if (foundProduct) {\n          setProduct(foundProduct);\n        } else {\n          console.log(\"Product not found\");\n        }\n      } catch (error) {\n        console.log(\"Error fetching product: \", error);\n      }\n    };\n    fetchProduct();\n  }, [productId]);\n\n  useEffect(() => {\n    const storedCart = localStorage.getItem(\"cart\");\n    if (storedCart) {\n      console.log(\"Cart items in localStorage:\");\n      console.log(JSON.parse(storedCart));\n    } else {\n      console.log(\"No cart items found in localStorage.\");\n    }\n  }, []);\n\n  return (\n    <ProductContainer>\n      {product && (\n        <>\n          <DetailHeader menuName={product.name} />\n          <img src={product.imgUrl} alt={product.name} />\n          <p>{product.price}원</p>\n          <OptionContainer>\n            <OptionTitle>온도</OptionTitle>\n            <SectionContainer>\n              <TemperatureButton\n                temperature=\"Hot\"\n                selectedTemperature={selectedTemperature}\n                handleTemperatureClick={handleTemperatureClick}\n                disabled={!product.hasHot}\n              />\n              <TemperatureButton\n                temperature=\"ice\"\n                selectedTemperature={selectedTemperature}\n                handleTemperatureClick={handleTemperatureClick}\n                disabled={!product.hasIce}\n              />\n            </SectionContainer>\n          </OptionContainer>\n          <OptionContainer>\n            <OptionTitle>사이즈</OptionTitle>\n            <SectionContainer>\n              <SizeButton\n                size=\"Large\"\n                selectedSize={selectedSize}\n                handleSizeClick={handleSizeClick}\n                disabled={!product.hasLarge}\n              />\n              <SizeButton\n                size=\"Small\"\n                selectedSize={selectedSize}\n                handleSizeClick={handleSizeClick}\n                disabled={!product.hasSmall}\n              />\n            </SectionContainer>\n          </OptionContainer>\n          <SectionContainer>\n            <p>수량:</p>\n            <QuantityButton\n              amount={amount}\n              incrementAmount={incrementAmount}\n              decrementAmount={decrementAmount}\n            />\n          </SectionContainer>\n          <OrderInfoModule\n            total={product.price * amount}\n            product={{\n              productId: productId,\n              name: product.name,\n              amount: amount,\n              imgUrl: product.imgUrl,\n              price: product.price,\n              selectedTemperature: selectedTemperature,\n              selectedSize: selectedSize,\n            }}\n          />\n          {/* 주문 정보 모듈 추가 */}\n          <SectionContainer>\n            <AddToCartButton\n              product={{\n                productId: productId,\n                name: product.name,\n                amount: amount,\n                imgUrl: product.imgUrl,\n                price: product.price,\n                selectedTemperature: selectedTemperature,\n                selectedSize: selectedSize,\n              }}\n            />\n          </SectionContainer>\n        </>\n      )}\n    </ProductContainer>\n  );\n};\n\nexport default ProductDetailsPage;\n"],"names":["MenuHeaderContainer","styled","div","_templateObject","_taggedTemplateLiteral","BackButton","button","_templateObject2","MenuDetails","_templateObject3","Menu","p","_templateObject4","_ref","menuName","_jsxs","children","onClick","goBack","window","history","back","_jsx","Button","props","selected","QuantityButtonContainer","QuantityButton1","amount","incrementAmount","decrementAmount","disabled","temperature","selectedTemperature","handleTemperatureClick","size","selectedSize","handleSizeClick","ModalBackdrop","ModalContent","ButtonContainer","ButtonWrapper","CloseButton","_templateObject5","CartButton","Link","_templateObject6","ModalText","_templateObject7","show","handleClose","cartAdded","_Fragment","undefined","to","as","OrderInfoContainer","TotalPriceText","OrderButton","product","total","showModal","setShowModal","useState","handleOrder","newCart","localStorage","setItem","JSON","stringify","location","href","CartToAddModal","handleCloseModal","setCartAdded","addToCart","cart","parse","getItem","existingItemIndex","findIndex","item","productId","push","closeModal","ProductContainer","SectionContainer","OptionContainer","OptionTitle","ProductDetailsPage","useParams","setProduct","setAmount","setSelectedTemperature","setSelectedSize","useEffect","async","foundProduct","getProducts","flatMap","cat","products","find","prod","parseInt","console","log","error","fetchProduct","storedCart","DetailHeader","name","src","imgUrl","alt","price","TemperatureButton","hasHot","hasIce","SizeButton","hasLarge","hasSmall","QuantityButton","OrderInfoModule","AddToCartButton"],"sourceRoot":""}